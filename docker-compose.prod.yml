version: '3.8'

services:
  aci-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - REACT_APP_SUPABASE_URL=${REACT_APP_SUPABASE_URL}
        - REACT_APP_SUPABASE_ANON_KEY=${REACT_APP_SUPABASE_ANON_KEY}
        - GEMINI_API_KEY=${GEMINI_API_KEY}
        - API_KEY=${API_KEY}
    container_name: aci-automacoes-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - REACT_APP_SUPABASE_URL=${REACT_APP_SUPABASE_URL}
      - REACT_APP_SUPABASE_ANON_KEY=${REACT_APP_SUPABASE_ANON_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - API_KEY=${API_KEY}
      - VITE_BITLY_ACCESS_TOKEN=${VITE_BITLY_ACCESS_TOKEN}
    env_file:
      - .env.local
    restart: always
    networks:
      - aci-prod-network
    volumes:
      - aci-prod-logs:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Para SSL certificates
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aci-prod.rule=Host(`seu-dominio.com`)"
      - "traefik.http.routers.aci-prod.tls=true"
      - "traefik.http.routers.aci-prod.tls.certresolver=letsencrypt"
      - "traefik.http.services.aci-prod.loadbalancer.server.port=80"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  aci-prod-network:
    driver: bridge
    name: aci-prod-network

volumes:
  aci-prod-logs:
    driver: local
    name: aci-prod-logs